#!/bin/bash
set -e

function usage(){
  >&2 echo "Usage:
  -n IP address or hostname of the mysql or proxy node to retrieve logs from (can be specified multiple times)
  -d The output directory

  example:
    ./download-logs -d /tmp -n 10.0.0.1 -n 10.0.0.2
  "
  exit 1
}

while getopts "d:n:" opt; do
  case $opt in
    d)
      output_dir=$OPTARG
      ;;
    n)
      nodes+=("$OPTARG")
      ;;
    *)
      echo "Unknown arguments"
      usage
      ;;
  esac
done

if [ -z "${output_dir}" ]; then
  usage
fi

if [ ${#nodes[@]} == 0 ]; then
  usage
fi

echo "Please enter passphrase to encrypt files. This will be needed to decrypt the downloaded logs"
read -s passphrase

echo "Please re-enter passphrase to encrypt files."
read -s verify_passphrase

if [ "${passphrase}" != "${verify_passphrase}" ]; then
  echo "Passphrases do not match. Quitting"
  exit 1
fi

for node in "${nodes[@]}"; do
node_logs+="${node}.tar.gz "

 ssh "vcap@${node}" "found_paths=(); \
    for path in '/var/vcap/sys/log' '/var/vcap/store/mysql'; do \
      if [ -d \${path} ]; then \
        found_paths+=(\${path}); \
      fi; \
    done; \
    find \${found_paths[@]} \( -path '/var/vcap/sys/log/*' \
      -o -path '/var/vcap/store/mysql/mysql-bin.*' \
      -o -path '/var/vcap/store/mysql/GRA*.log' \) \
      -print0 | tar --create \
      --absolute-names \
      --transform s%^%${node}% \
      --gzip \
      --null \
      --files-from -" > "${output_dir}/${node}.tar.gz"
done

pushd "${output_dir}"
  tar -zcvf mysql-logs.tar.gz ${node_logs[@]}
  rm ${node_logs[@]}

  gpg -c --batch --yes --no-tty --passphrase "${passphrase}" ./mysql-logs.tar.gz
  rm mysql-logs.tar.gz
popd

echo "Encrypted logs saved at "${output_dir}"/mysql-logs.tar.gz.gpg"
