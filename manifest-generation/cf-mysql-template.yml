---
name: (( property_overrides.deployment_name || config_from_cf.cf_deployment_name "-heartbeat-mysql" ))
director_uuid: (( config_from_cf.cf_director_uuid ))

releases: (( base_releases additional_releases ))

compilation:
  workers: (( iaas_settings.compilation_workers || 4)) 
  network: mysql1
  reuse_compilation_vms: true
  cloud_properties: (( iaas_settings.compilation_cloud_properties ))

update:
  canaries: 1
  canary_watch_time: (( iaas_settings.watch_time || "10000-600000" ))
  update_watch_time: (( iaas_settings.watch_time || "10000-600000" ))
  max_in_flight: 1
  serial: true

networks:
  - name: mysql1
    type: manual
    subnets: (( iaas_settings.subnet_configs.mysql1.subnets ))
  - name: mysql2
    type: manual
    subnets: (( iaas_settings.subnet_configs.mysql2.subnets ))
  - name: mysql3
    type: manual
    subnets: (( iaas_settings.subnet_configs.mysql3.subnets ))

disk_pools: (( base_disk_pools additional_disk_pools ))

resource_pools: (( base_resource_pools additional_resource_pools ))

jobs: (( base_jobs additional_jobs ))

properties:
  <<: (( merge || nil ))
  nats:
    machines: (( config_from_cf.nats.machines ))
    user: (( config_from_cf.nats.user ))
    password: (( config_from_cf.nats.password ))
    port: (( config_from_cf.nats.port ))
  cf:
    api_url: (( config_from_cf.api_url ))
    app_domains: (( config_from_cf.app_domains ))
    admin_username: (( config_from_cf.uaa.scim.users.admin.name ))
    admin_password: (( config_from_cf.uaa.scim.users.admin.password ))
    skip_ssl_validation: (( config_from_cf.skip_ssl_validation || nil ))
    smoke_tests:
      use_existing_org: (( config_from_cf.smoke_tests.use_existing_org || nil ))
      org: (( config_from_cf.smoke_tests.org || nil ))
  syslog_aggregator: (( property_overrides.syslog_aggregator || nil ))
  cf_mysql:
    external_host: (( property_overrides.mysql.external_host || "p-mysql." .config_from_cf.system_domain ))
    host: (( property_overrides.host || jobs.proxy_z1.networks.mysql1.static_ips.[0] || nil ))
    mysql:
      admin_username: (( property_overrides.mysql.admin_username || nil ))
      admin_password: (( property_overrides.mysql.admin_password ))
      disable_auto_sst: (( property_overrides.mysql.disable_auto_sst || nil ))
      port: (( property_overrides.mysql.port || nil ))
      galera_port: (( property_overrides.mysql.galera_port || nil ))
      galera_healthcheck: (( property_overrides.mysql.galera_healthcheck || nil ))
      cluster_ips: (( property_overrides.mysql.cluster_ips || default_mysql_cluster_ips ))
      roadmin_enabled: (( property_overrides.mysql.roadmin_enabled || false ))
      roadmin_password: (( property_overrides.mysql.roadmin_password ))
      seeded_databases: (( property_overrides.mysql.seeded_databases || nil ))
      max_heap_table_size: (( property_overrides.mysql.max_heap_table_size || nil ))
      tmp_table_size: (( property_overrides.mysql.tmp_table_size || nil ))
      wsrep_max_ws_rows: (( property_overrides.mysql.wsrep_max_ws_rows || nil ))
      wsrep_max_ws_size: (( property_overrides.mysql.wsrep_max_ws_size || nil ))
      skip_name_resolve: (( property_overrides.mysql.skip_name_resolve || nil ))
      gcache_size: (( property_overrides.mysql.gcache_size || nil ))
      ib_log_file_size: (( property_overrides.mysql.ib_log_file_size || nil ))
      innodb_buffer_pool_instances: (( property_overrides.mysql.innodb_buffer_pool_instances || nil ))
      innodb_buffer_pool_size: (( property_overrides.mysql.innodb_buffer_pool_size || nil ))
      innodb_flush_log_at_trx_commit: (( property_overrides.mysql.innodb_flush_log_at_trx_commit || nil ))
      interrupt_notify_cmd: (( property_overrides.mysql.interrupt_notify_cmd || nil ))
      max_connections: (( property_overrides.mysql.max_connections || nil ))
      persistent_disk: (( disk_pools.mysql-persistent-disk.disk_size ))
      userstat: (( property_overrides.mysql.userstat || false ))
      wsrep_debug: (( property_overrides.mysql.wsrep_debug || 0 ))
      server_audit_events: (( property_overrides.mysql.server_audit_events || nil ))
      server_audit_excluded_users: (( property_overrides.mysql.server_audit_excluded_users || nil ))
      cluster_health:
        password: (( property_overrides.mysql.cluster_health.password ))
      binlog_enabled: (( property_overrides.mysql.binlog_enabled || true ))
      startup_timeout: (( property_overrides.mysql.startup_timeout || nil ))
    proxy:
      api_username: (( property_overrides.proxy.api_username ))
      api_password: (( property_overrides.proxy.api_password ))
      health_port: (( property_overrides.proxy.health_port || nil ))
      api_force_https: (( property_overrides.proxy.api_force_https || nil ))
      proxy_ips: (( property_overrides.proxy.proxy_ips || default_proxy_ips ))
      arbitrator_ip: (( jobs.arbitrator_z3.networks.mysql3.static_ips.[0] || nil ))
      port: (( property_overrides.proxy.port || nil ))
      healthcheck_timeout_millis: (( property_overrides.proxy.healthcheck_timeout_millis || nil ))
      api_port: (( property_overrides.proxy.api_port || nil ))
      consul_enabled: (( property_overrides.proxy.consul_enabled || nil ))
      consul_service_name: (( property_overrides.proxy.consul_service_name || nil ))
  cf-mysql-backup: (( property_overrides.cf-mysql-backup || nil ))
  service-backup: (( property_overrides.service-backup || nil ))

  # -- Properties below are used by the consul_agent job from cf-release --
  consul:
    agent:
      datacenter: (( config_from_cf.consul.datacenter ))
      domain: (( config_from_cf.consul.domain ))
      log_level: (( config_from_cf.consul.log_level ))
      servers:
        lan: (( config_from_cf.consul.lan_servers ))
    ca_cert: (( config_from_cf.consul.ca_cert ))
    agent_cert: (( config_from_cf.consul.agent_cert ))
    agent_key: (( config_from_cf.consul.agent_key ))
    encrypt_keys: (( config_from_cf.consul.encrypt_keys ))
    server_cert: (( config_from_cf.consul.server_cert ))
    server_key: (( config_from_cf.consul.server_key ))

base_releases:
- name: cf-mysql
  version: (( release_versions.cf-mysql.version || "latest" ))
- name: routing
  version: (( release_versions.routing.version || "latest" ))
base_disk_pools:
- name: mysql-persistent-disk
  disk_size: (( iaas_settings.disk_pools.mysql-persistent-disk.disk_size || 100000 ))
  cloud_properties: (( iaas_settings.disk_pools.mysql-persistent-disk.cloud_properties || empty_hash ))
base_resource_pools:
- name: mysql_z1
  network: mysql1
  stemcell: (( iaas_settings.stemcell ))
  cloud_properties: (( iaas_settings.resource_pool_cloud_properties.mysql_z1.cloud_properties ))
- name: mysql_z2
  network: mysql2
  stemcell: (( iaas_settings.stemcell ))
  cloud_properties: (( iaas_settings.resource_pool_cloud_properties.mysql_z2.cloud_properties ))
- name: mysql_z3
  network: mysql3
  stemcell: (( iaas_settings.stemcell ))
  cloud_properties: (( iaas_settings.resource_pool_cloud_properties.mysql_z3.cloud_properties ))
- name: arbitrator_z3
  network: mysql3
  stemcell: (( iaas_settings.stemcell ))
  cloud_properties: (( iaas_settings.resource_pool_cloud_properties.arbitrator_z3.cloud_properties ))
- name: proxy_z1
  network: mysql1
  stemcell: (( iaas_settings.stemcell ))
  cloud_properties: (( iaas_settings.resource_pool_cloud_properties.proxy_z1.cloud_properties ))
- name: proxy_z2
  network: mysql2
  stemcell: (( iaas_settings.stemcell ))
  cloud_properties: (( iaas_settings.resource_pool_cloud_properties.proxy_z2.cloud_properties ))
- name: cf-mysql-broker_z1
  network: mysql1
  stemcell: (( iaas_settings.stemcell ))
  cloud_properties: (( iaas_settings.resource_pool_cloud_properties.cf-mysql-broker_z1.cloud_properties ))
- name: cf-mysql-broker_z2
  network: mysql2
  stemcell: (( iaas_settings.stemcell ))
  cloud_properties: (( iaas_settings.resource_pool_cloud_properties.cf-mysql-broker_z2.cloud_properties ))
- name: errands_z1
  network: mysql1
  stemcell: (( iaas_settings.stemcell ))
  cloud_properties: (( iaas_settings.resource_pool_cloud_properties.errands_z1.cloud_properties ))

base_templates:
  mysql:
  - release: cf-mysql
    name: mysql
    consumes: {mysql: nil, arbitrator: nil}
  arbitrator:
  - release: cf-mysql
    name: arbitrator
    consumes: {mysql: nil, arbitrator: nil}
  broker:
  - release: cf-mysql
    name: cf-mysql-broker
    consumes: {mysql: nil, proxy: nil}
  - release: routing
    name: route_registrar
  proxy: (( default_proxy_templates proxy_route_registration_templates ))

default_proxy_templates:
- release: cf-mysql
  name: proxy
  consumes: {mysql: nil, arbitrator: nil, proxy: nil}

route_registration_templates:
- release: routing
  name: route_registrar

proxy_route_registration_templates: (( merge || route_registration_templates ))

colocated_jobs:
  mysql_z1: (( job_overrides.colocated_jobs.mysql_z1.additional_templates || empty_list ))
  mysql_z2: (( job_overrides.colocated_jobs.mysql_z2.additional_templates || empty_list ))
  mysql_z3: (( job_overrides.colocated_jobs.mysql_z3.additional_templates || empty_list ))
  arbitrator_z3: (( job_overrides.colocated_jobs.arbitrator_z3.additional_templates || empty_list ))
  proxy_z1: (( job_overrides.colocated_jobs.proxy_z1.additional_templates || empty_list ))
  proxy_z2: (( job_overrides.colocated_jobs.proxy_z2.additional_templates || empty_list ))
  cf-mysql-broker_z1: (( job_overrides.colocated_jobs.cf-mysql-broker_z1.additional_templates || empty_list ))
  cf-mysql-broker_z2: (( job_overrides.colocated_jobs.cf-mysql-broker_z2.additional_templates || empty_list ))

base_jobs:
- name: mysql_z1
  templates: (( base_templates.mysql colocated_jobs.mysql_z1 ))
  instances: (( instance_count_overrides.mysql_z1.instances || 1 ))
  resource_pool: mysql_z1
  persistent_disk_pool: mysql-persistent-disk
  networks:
  - name: mysql1
    static_ips: (( static_ips(0) ))
- name: mysql_z2
  templates: (( base_templates.mysql colocated_jobs.mysql_z2 ))
  instances: (( instance_count_overrides.mysql_z2.instances || 1 ))
  resource_pool: mysql_z2
  persistent_disk_pool: mysql-persistent-disk
  networks:
  - name: mysql2
    static_ips: (( static_ips(0) ))
- name: mysql_z3
  templates: (( base_templates.mysql colocated_jobs.mysql_z3 ))
  # defaults to using an arbitrator in place of mysql node in z3
  instances: (( instance_count_overrides.mysql_z3.instances || 0 ))
  resource_pool: mysql_z3
  persistent_disk_pool: mysql-persistent-disk
  networks:
  - name: mysql3
    static_ips: (( static_ips(0) ))
- name: arbitrator_z3
  templates: (( base_templates.arbitrator colocated_jobs.arbitrator_z3 ))
  instances: (( instance_count_overrides.arbitrator_z3.instances || 1 ))
  resource_pool: arbitrator_z3
  networks:
  - name: mysql3
    static_ips: (( static_ips(1) ))
- name: proxy_z1
  templates: (( base_templates.proxy colocated_jobs.proxy_z1 ))
  instances: (( instance_count_overrides.proxy_z1.instances || 1 ))
  resource_pool: proxy_z1
  networks:
  - name: mysql1
    static_ips: (( static_ips(1) ))
  properties:
    route_registrar:
      routes:
      - name: cf-mysql-proxy
        port: (( property_overrides.proxy.api_port || 8080 )) # the default here must match the default in the job spec
        registration_interval: 10s
        uris:
        - (( "0-heartbeat-proxy-" .properties.cf_mysql.external_host ))
- name: proxy_z2
  templates: (( base_templates.proxy colocated_jobs.proxy_z2 ))
  instances: (( instance_count_overrides.proxy_z2.instances || 1 ))
  resource_pool: proxy_z2
  networks:
  - name: mysql2
    static_ips: (( static_ips(1) ))
  properties:
    route_registrar:
      routes:
      - name: cf-mysql-proxy
        port: (( property_overrides.proxy.api_port || 8080 )) # the default here must match the default in the job spec
        registration_interval: 10s
        uris:
        - (( "1-heartbeat-proxy-" .properties.cf_mysql.external_host ))
- name: cf-mysql-broker_z1
  templates: (( base_templates.broker colocated_jobs.cf-mysql-broker_z1 ))
  instances: (( instance_count_overrides.cf-mysql-broker_z1.instances || 1 ))
  resource_pool: cf-mysql-broker_z1
  networks:
  - name: mysql1
  properties:
    route_registrar:
      routes:
      - name: cf-mysql-broker
        port: (( property_overrides.broker.port || 8081 )) # the default here must match the default in the job spec
        registration_interval: 10s
        uris:
        - (( .properties.cf_mysql.external_host ))
        health_check:
          name: script
          script_path: /var/vcap/jobs/cf-mysql-broker/bin/healthcheck.sh
- name: cf-mysql-broker_z2
  templates: (( base_templates.broker colocated_jobs.cf-mysql-broker_z2 ))
  instances: (( instance_count_overrides.cf-mysql-broker_z2.instances || 1 ))
  resource_pool: cf-mysql-broker_z2
  networks:
  - name: mysql2
  properties:
    route_registrar:
      routes:
      - name: cf-mysql-broker
        port: (( property_overrides.broker.port || 8081 )) # the default here must match the default in the job spec
        registration_interval: 10s
        uris:
        - (( .properties.cf_mysql.external_host ))
        health_check:
          name: script
          script_path: /var/vcap/jobs/cf-mysql-broker/bin/healthcheck.sh
- name: bootstrap
  template: bootstrap
  release: cf-mysql
  instances: 1
  resource_pool: errands_z1
  lifecycle: errand
  networks:
  - name: mysql1
  properties: {}
- name: rejoin-unsafe
  template: rejoin-unsafe
  release: cf-mysql
  instances: 1
  resource_pool: errands_z1
  lifecycle: errand
  networks:
  - name: mysql1
  properties: {}
- name: verify-cluster-schemas
  template: verify-cluster-schemas
  release: cf-mysql
  instances: 1
  resource_pool: errands_z1
  lifecycle: errand
  networks:
  - name: mysql1
  properties: {}

# The keys below should not be included in the final stub
config_from_cf: (( merge ))
iaas_settings: (( merge ))
instance_count_overrides: (( merge || nil ))
property_overrides: (( merge ))
release_versions: (( merge || nil ))
job_overrides: (( merge || nil ))
default_mysql_cluster_ips:
- (( jobs.mysql_z1.networks.mysql1.static_ips.[0] ))
- (( jobs.mysql_z2.networks.mysql2.static_ips.[0] || nil ))
- (( jobs.mysql_z3.networks.mysql3.static_ips.[0] || nil ))
- (( jobs.arbitrator_z3.networks.mysql3.static_ips.[0] || nil ))
default_proxy_ips:
- (( jobs.proxy_z1.networks.mysql1.static_ips.[0] || nil ))
- (( jobs.proxy_z2.networks.mysql2.static_ips.[0] || nil ))
# spiff does not allow concating multiple fields of different types
# without adding new temporary properties
additional_disk_pools: (( iaas_settings.additional_disk_pools || empty_list ))
additional_releases: (( job_overrides.additional_releases || empty_list ))
additional_resource_pools: (( iaas_settings.additional_resource_pools || empty_list))
additional_jobs: (( job_overrides.additional_jobs || empty_list ))
empty_hash: {}
empty_list: []
